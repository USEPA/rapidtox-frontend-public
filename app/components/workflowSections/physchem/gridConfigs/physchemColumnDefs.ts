import type {ColDef} from 'ag-grid-community';
import type {PhyschemSummary} from '~/api/Physchem/types';

const colDefs: ColDef<PhyschemSummary>[] = [
  {
    headerName: 'Preferred Name',
    headerClass: 'preferredNameHeader',
    headerCheckboxSelection: true,
    enableRowGroup: true,
    rowGroup: true,
    hide: true,
    field: 'preferredName',
    filter: 'agSetColumnFilter',
    cellRenderer: 'ChemicalNameRenderer',
    sortable: true,
    minWidth: 200,
  },
  {
    headerName: 'Details',
    colId: 'detailsCol',
    cellRenderer: 'DetailsRenderer',
    cellRendererParams: {id: 'id'},
    suppressHeaderMenuButton: true,
    minWidth: 150,
  },
  {
    headerName: 'Property',
    headerClass: 'propertyHeader',
    checkboxSelection: rowNode => !(rowNode.node.group) && !!rowNode.node,
    field: 'property',
    tooltipValueGetter: () => null,
    cellRenderer: 'PropertyRenderer',
    filter: 'agSetColumnFilter',
    sortable: true,
    minWidth: 350,
  },
  {
    headerName: 'Exper. Avg.',
    headerClass: 'expAvgHeader',
    field: 'experimentalAverage',
    filter: 'agSetColumnFilter',
    cellRenderer: 'AvgAndMedianRenderer',
    cellRendererParams: {value: 'experimentalAverage'},
    sortable: true,
    minWidth: 180,
  },
  {
    headerName: 'Pred. Avg.',
    headerClass: 'predAvgHeader',
    field: 'predictedAverage',
    filter: 'agSetColumnFilter',
    cellRenderer: 'AvgAndMedianRenderer',
    cellRendererParams: {value: 'predictedAverage'},
    sortable: true,
    minWidth: 175,
  },
  {
    headerName: 'Exper. Median',
    headerClass: 'expMedHeader',
    field: 'experimentalMedian',
    filter: 'agSetColumnFilter',
    cellRenderer: 'AvgAndMedianRenderer',
    cellRendererParams: {value: 'experimentalMedian'},
    sortable: true,
    minWidth: 215,
  },
  {
    headerName: 'Pred. Median',
    headerClass: 'predMedHeader',
    field: 'predictedMedian',
    filter: 'agSetColumnFilter',
    cellRenderer: 'AvgAndMedianRenderer',
    cellRendererParams: {value: 'predictedMedian'},
    sortable: true,
    minWidth: 210,
  },
  {
    headerName: 'Exper. Range',
    headerClass: 'expRangeHeader',
    cellRenderer: 'RangeRenderer',
    cellRendererParams: {min: 'experimentalMinimum', max: 'experimentalMaximum'},
    filter: 'agSetColumnFilter',
    valueGetter: gridUtil.valueGetters.customExpRangeFilterValueGetter,
    sortable: true,
    minWidth: 205,
  },
  {
    headerName: 'Pred. Range',
    headerClass: 'predRangeHeader',
    cellRenderer: 'RangeRenderer',
    cellRendererParams: {min: 'predictedMinimum', max: 'predictedMaximum'},
    filter: 'agSetColumnFilter',
    valueGetter: gridUtil.valueGetters.customPredRangeFilterValueGetter,
    sortable: true,
    minWidth: 200,
  },
  {
    headerName: 'Unit',
    headerClass: 'unitAssessmentHeader',
    field: 'unit',
    filter: 'agSetColumnFilter',
    sortable: true,
    hide: true,
    minWidth: 130,
  },
];

export default colDefs;
